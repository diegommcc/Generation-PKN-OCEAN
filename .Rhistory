source("~/data/DM23/DM-29_Mouse-GSMMs_curation/Generation-PKN-OCEAN/src/final_functions_PKN_OCEAN.R", echo=TRUE)
suppressMessages(library("biomaRt"))
suppressMessages(library("readr"))
suppressMessages(library("stringr"))
suppressMessages(library("metaboliteIDmapping"))
suppressMessages(library("R.matlab"))
suppressMessages(library("dplyr"))
if (!requireNamespace("here")) {
install.packages("here")
}
projectPath <- here::here()
## source
source(file.path(projectPath, "src/final_functions_PKN_OCEAN.R"))
## Homo sapiens
reactions.map.hs <- read.delim(file.path(projectPath, "data/Human-PKN/reactions.tsv"))
metabolites.map.hs <- read.delim(file.path(projectPath, "data/Human-PKN/metabolites.tsv"))
projectPath
## source
source(file.path(projectPath, "src/final_functions_PKN_OCEAN.R"))
projectPath <- here::here()
## source
source(file.path(projectPath, "src/final_functions_PKN_OCEAN.R"))
kegg.all.compunds <- readRDS(
file.path(metadataPath, "231020_KEGG_All_Compunds", "ALL_COMPUNDS_KEGG.rds")
)
## KEGG ocmpounds
kegg.all.compunds <- readRDS(
file.path(projectPath, "data", "231020_KEGG_All_Compunds", "ALL_COMPUNDS_KEGG.rds")
)
KEGG.compounds <- unlist(kegg.all.compunds, recursive = FALSE)
names(KEGG.compounds) <- sapply(KEGG.compounds, \(x) x$ENTRY)
## set of dependencies
suppressMessages(library("biomaRt"))
suppressMessages(library("readr"))
suppressMessages(library("stringr"))
suppressMessages(library("metaboliteIDmapping"))
suppressMessages(library("R.matlab"))
suppressMessages(library("dplyr"))
if (!requireNamespace("here")) {
install.packages("here")
}
projectPath <- here::here()
## source
source(file.path(projectPath, "src/final_functions_PKN_OCEAN.R"))
## KEGG ocmpounds
kegg.all.compunds <- readRDS(
file.path(projectPath, "data", "231020_KEGG_All_Compunds", "ALL_COMPUNDS_KEGG.rds")
)
KEGG.compounds <- unlist(kegg.all.compunds, recursive = FALSE)
names(KEGG.compounds) <- sapply(KEGG.compounds, \(x) x$ENTRY)
## Homo sapiens
reactions.map.hs <- read.delim(file.path(projectPath, "data/Human-PKN/reactions.tsv"))
metabolites.map.hs <- read.delim(file.path(projectPath, "data/Human-PKN/metabolites.tsv"))
OCEAN.pkn.hs <- create_PKN_OCEAN(
GSMM.matlab.path = file.path(projectPath, "data/Human-PKN/Human-GEM.mat"),
GSMM.reactions.map = reactions.map.hs,
GSMM.metabolites.map = metabolites.map.hs,
translate.genes = TRUE,
organism = 9606
)
suppressMessages(library("biomaRt"))
suppressMessages(library("readr"))
suppressMessages(library("stringr"))
suppressMessages(library("metaboliteIDmapping"))
suppressMessages(library("R.matlab"))
suppressMessages(library("dplyr"))
if (!requireNamespace("here")) {
install.packages("here")
}
projectPath <- here::here()
## source
source(file.path(projectPath, "src/final_functions_PKN_OCEAN.R"))
kegg.all.compunds <- readRDS(
file.path(projectPath, "data", "231020_KEGG_All_Compunds", "ALL_COMPUNDS_KEGG.rds")
)
KEGG.compounds <- unlist(kegg.all.compunds, recursive = FALSE)
names(KEGG.compounds) <- sapply(KEGG.compounds, \(x) x$ENTRY)
reactions.map.hs <- read.delim(file.path(projectPath, "data/Human-PKN/reactions.tsv"))
metabolites.map.hs <- read.delim(file.path(projectPath, "data/Human-PKN/metabolites.tsv"))
OCEAN.pkn.hs <- create_PKN_OCEAN(
GSMM.matlab.path = file.path(projectPath, "data/Human-PKN/Human-GEM.mat"),
GSMM.reactions.map = reactions.map.hs,
GSMM.metabolites.map = metabolites.map.hs,
translate.genes = TRUE,
organism = 9606
)
## source
source(file.path(projectPath, "src/final_functions_PKN_OCEAN.R"))
OCEAN.pkn.hs <- create_PKN_OCEAN(
GSMM.matlab.path = file.path(projectPath, "data/Human-PKN/Human-GEM.mat"),
GSMM.reactions.map = reactions.map.hs,
GSMM.metabolites.map = metabolites.map.hs,
translate.genes = TRUE,
organism = 9606
)
## source
source(file.path(projectPath, "src/final_functions_PKN_OCEAN.R"))
OCEAN.pkn.hs <- create_PKN_OCEAN(
GSMM.matlab.path = file.path(projectPath, "data/Human-PKN/Human-GEM.mat"),
GSMM.reactions.map = reactions.map.hs,
GSMM.metabolites.map = metabolites.map.hs,
KEGG.compounds = KEGG.compounds,
translate.genes = TRUE,
organism = 9606
)
OCEAN.pkn.hs
OCEAN.pkn.hs[[1]]
OCEAN.pkn.hs[[2]]
OCEAN.pkn.hs[[3]]
OCEAN.pkn.hs[[4]]
OCEAN.pkn.hs[[5]]
saveRDS(OCEAN.pkn.hs, file.path(projectPath, "output/OCEAN.PKN.hs.9606.rds"))
reactions.map.mm <- read.delim(file.path(projectPath, "data/Mouse-PKN/reactions.tsv"))
metabolites.map.mm <- read.delim(file.path(projectPath, "data/Mouse-PKN/metabolites.tsv"))
cosmos.pkn.mm <- create_PKN_COSMOS(
GSMM.matlab.path = file.path(projectPath, "data/Mouse-PKN/Mouse-GEM.mat"),
GSMM.reactions.map = reactions.map.mm,
GSMM.metabolites.map = metabolites.map.mm,
KEGG.compounds = KEGG.compounds,
translate.genes = FALSE,
organism = 10090,
)
OCEAN.pkn.mm <- create_PKN_OCEAN(
GSMM.matlab.path = file.path(projectPath, "data/Mouse-PKN/Mouse-GEM.mat"),
GSMM.reactions.map = reactions.map.mm,
GSMM.metabolites.map = metabolites.map.mm,
KEGG.compounds = KEGG.compounds,
translate.genes = FALSE,
organism = 10090,
)
OCEAN.pkn.mm
OCEAN.pkn.mm$GSMM.PKN
grep("_", OCEAN.pkn.mm$GSMM.PKN, value = T)
saveRDS(OCEAN.pkn.mm, file.path(projectPath, "output/OCEAN.PKN.mm.10090.rds"))
reactions.map.rn <- read.delim(file.path(projectPath, "data/Rat-PKN/reactions.tsv"))
metabolites.map.rn <- read.delim(file.path(projectPath, "data/Rat-PKN/metabolites.tsv"))
reactions.map.rn <- read.delim(file.path(projectPath, "data/Rat-PKN/reactions.tsv"))
metabolites.map.rn <- read.delim(file.path(projectPath, "data/Rat-PKN/metabolites.tsv"))
OCEAN.pkn.rn <- create_PKN_OCEAN(
GSMM.matlab.path = file.path(projectPath, "data/Rat-PKN/Rat-GEM.mat"),
GSMM.reactions.map = reactions.map.rn,
GSMM.metabolites.map = metabolites.map.rn,
KEGG.compounds = KEGG.compounds,
translate.genes = FALSE,
organism = 10116
)
OCEAN.pkn.rn
OCEAN.pkn.rn[[1]]
OCEAN.pkn.rn[[2]]
OCEAN.pkn.rn[[3]]
OCEAN.pkn.rn[[4]]
saveRDS(OCEAN.pkn.rn, file.path(projectPath, "output/OCEAN.PKN.rn.10116.rds"))
vec.cofactors <-readRDS(file.path(kegg.path, "231201_KEGG.Compound.cofactors.IDs.rds"))
kegg.path <- "/home/dmananesc/data/DM23/DM-29_Mouse-GSMMs_curation/KEGGREST.Compounds"
vec.cofactors <-readRDS(file.path(kegg.path, "231201_KEGG.Compound.cofactors.IDs.rds"))
vec.cofactors
length(vec.cofactors)
unname(vec.cofactors)
vec.cofactors
vec.cofactors <- unname(vec.cofactors)
vec.cofactors
paste(vec.cofactors, collapse = ", ")
paste(paste0("'", vec.cofactors, "'"), collapse = ", ")
## this function removes cofactors based on BRITE information.
# I have to improve it: check inputs, etc.
# maybe creating a class for this could be a good idea...
# transaminases are removed here. Ask Aurelien
.remove_cofactors <- function(
list.network,
KEGG.compounds = NULL,
mets.map.kegg.col = "metKEGGID",
verbose = TRUE
) {
## check if KEGG.compounds is not null: use internal lisst of cofactors
if (!is.null(KEGG.network)) {
## check how many metabolites are shared in both objects
kegg.ids.GSMM <- unique(
na.omit(list.network[[2]][[mets.map.kegg.col]])
)
valid.mets <- intersect(names(KEGG.compounds), kegg.ids.GSMM)
if (verbose) {
message(
paste(
">>> Checking BRITE info of",
length(valid.mets), "metabolites"
)
)
}
## getting bad mets
bad_kegg_compounds <- Filter(
f = \(compound) {
brite <- compound$BRITE
compound$NAME <- gsub(";", "", compound$NAME)
if (!is.null(compound$ATOM)) {
brite <- gsub("[ ]+", "", brite)
if(("Cofactors" %in% brite |
"Nucleotides" %in% brite |
"CO2" %in% compound$NAME |
as.numeric(compound$ATOM[1]) <= 3 |
"ITP" %in% compound$NAME |
"IDP" %in% compound$NAME |
"NADH" %in% compound$NAME |
"NADPH" %in% compound$NAME |
"FADH2" %in% compound$NAME) &
!"SAM" %in% compound$NAME)
{
return(TRUE)
}
}
},
x = KEGG.compounds[valid.mets]
)
bad_entries <- sapply(bad_kegg_compounds, \(x) x$ENTRY[1])
## including diphosphate
bad_entries <- c(bad_entries, "C00013", "C00009")
}
if (verbose) {
message(
paste(
">>>", length(bad_entries),
"metabolites have been identified as cofactors"
)
)
}
## removing cofactors from network
mets.map.bad <- list.network[[2]] %>%
filter(.data[[mets.map.kegg.col]] %in% bad_entries)
network.filt <- list.network[[1]] %>% mutate(
source = case_when(
grepl("Metab__", source) &
gsub("Metab__", "", source) %in% rownames(mets.map.bad) ~
NA,
TRUE ~ source
),
target = case_when(
grepl("Metab__", target) &
gsub("Metab__", "", target) %in% rownames(mets.map.bad) ~
NA,
TRUE ~ target
)
) %>% filter(!is.na(source), !is.na(target))
# reaction.network.no.cofact <- list.network[[1]][
#   !(reaction.network$source %in% bad_entries) &
#     !(reaction.network$target %in% bad_entries),
# ]
mets.map.f <- list.network[[2]][!list.network[[2]][[mets.map.kegg.col]] %in% bad_entries, ]
nodes <- unique(c(network.filt$source, network.filt$target))
node.attributes <- data.frame(
Node = nodes,
Type = ifelse(grepl("Gene\\d+__", nodes), "reaction_enzyme", "metabolite")
)
return(
list(
GSMM.PKN = network.filt,
mets.map = mets.map.f,
reac.to.gene = list.network[[3]],
reac.map = list.network[[4]],
attributes = node.attributes
)
)
}
bad_entries <- c(
'C00001', 'C00002', 'C00003', 'C00004', 'C00005', 'C00006', 'C00007', 'C00008',
'C00009', 'C00010', 'C00011', 'C00012', 'C00013', 'C00014', 'C00015', 'C00016',
'C00017', 'C00018', 'C00019', 'C00020', 'C00021', 'C00022', 'C00023', 'C00024',
'C00025', 'C00026', 'C00027', 'C00028', 'C00029', 'C00030', 'C00031', 'C00032',
'C00033', 'C00034', 'C00035', 'C00036', 'C00037', 'C00038', 'C00039', 'C00040',
'C00041', 'C00042', 'C00043', 'C00044', 'C00045', 'C00046', 'C00047', 'C00048',
'C00049', 'C00050', 'C00051', 'C00052', 'C00053', 'C00054', 'C00055', 'C00058',
'C00059', 'C00060', 'C00061', 'C00062', 'C00063', 'C00064', 'C00065', 'C00066',
'C00067', 'C00068', 'C00069', 'C00070', 'C00071', 'C00072', 'C00073', 'C00074',
'C00075', 'C00076', 'C00077', 'C00078', 'C00079', 'C00080', 'C00081', 'C00082',
'C00083', 'C00084', 'C00085', 'C00086', 'C00087', 'C00088', 'C00089', 'C00090',
'C00091', 'C00092', 'C00093', 'C00094', 'C00095', 'C00096', 'C00097', 'C00098',
'C00099', 'C00100', 'C00101', 'C00102', 'C00103', 'C00104', 'C00105', 'C00106',
'C00107', 'C00108', 'C00109', 'C00110', 'C00111', 'C00112', 'C00113', 'C00114',
'C00116', 'C00117', 'C00118', 'C00119', 'C00120', 'C00121', 'C00122', 'C00123',
'C00124', 'C00125', 'C00126', 'C00127', 'C00128', 'C00129', 'C00130', 'C00131',
'C00132', 'C00133', 'C00134', 'C00135', 'C00136', 'C00137', 'C00138', 'C00139',
'C00140', 'C00141', 'C00143', 'C00144', 'C00145', 'C00146', 'C00147', 'C00148',
'C00149', 'C00150', 'C00151', 'C00152', 'C00153', 'C00154', 'C00155', 'C00156',
'C00157', 'C00158', 'C00159', 'C00160', 'C00161', 'C00162', 'C00163', 'C00164',
'C00165', 'C00166', 'C00167', 'C00168', 'C00169', 'C00170', 'C00171', 'C00172',
'C00173', 'C00174', 'C00175', 'C00176', 'C00177', 'C00178', 'C00179', 'C00180',
'C00181', 'C00182', 'C00183', 'C00184', 'C00185', 'C00186', 'C00187', 'C00188',
'C00189', 'C00190', 'C00191', 'C00192', 'C00193', 'C00194', 'C00195', 'C00196',
'C00197', 'C00198', 'C00199', 'C00200', 'C00201', 'C00202', 'C00203', 'C00204',
'C00205', 'C00206', 'C00207', 'C00208', 'C00209', 'C00210', 'C00211', 'C00212',
'C00213', 'C00214', 'C00215', 'C00216', 'C00217', 'C00218', 'C00219', 'C00220',
'C00221', 'C00222', 'C00223', 'C00224', 'C00225', 'C00226', 'C00227', 'C00229',
'C00230', 'C00231', 'C00232', 'C00233', 'C00234', 'C00235', 'C00236', 'C00237',
'C00238', 'C00239', 'C00240', 'C00241', 'C00242', 'C00243', 'C00244', 'C00245',
'C00246', 'C00247', 'C00248', 'C00249', 'C00250', 'C00251', 'C00252', 'C00253',
'C00254', 'C00255', 'C00256', 'C00257', 'C00258', 'C00259', 'C00261', 'C00262',
'C00263', 'C00264', 'C00265', 'C00266', 'C00267', 'C00268', 'C00269', 'C00270',
'C00272', 'C00273', 'C00275', 'C00279', 'C00280', 'C00282', 'C00283'
)
suppressMessages(library("biomaRt"))
suppressMessages(library("readr"))
suppressMessages(library("stringr"))
suppressMessages(library("metaboliteIDmapping"))
suppressMessages(library("R.matlab"))
suppressMessages(library("dplyr"))
if (!requireNamespace("here")) {
install.packages("here")
}
projectPath <- here::here()
## source
source(file.path(projectPath, "src/final_functions_PKN_OCEAN.R"))
## Homo sapiens
reactions.map.hs <- read.delim(file.path(projectPath, "data/Human-PKN/reactions.tsv"))
metabolites.map.hs <- read.delim(file.path(projectPath, "data/Human-PKN/metabolites.tsv"))
OCEAN.pkn.hs <- create_PKN_OCEAN(
GSMM.matlab.path = file.path(projectPath, "data/Human-PKN/Human-GEM.mat"),
GSMM.reactions.map = reactions.map.hs,
GSMM.metabolites.map = metabolites.map.hs,
KEGG.compounds = KEGG.compounds,
translate.genes = TRUE,
organism = 9606
)
OCEAN.pkn.hs <- create_PKN_OCEAN(
GSMM.matlab.path = file.path(projectPath, "data/Human-PKN/Human-GEM.mat"),
GSMM.reactions.map = reactions.map.hs,
GSMM.metabolites.map = metabolites.map.hs,
KEGG.compounds = NULL,
translate.genes = TRUE,
organism = 9606
)
## source
source(file.path(projectPath, "src/final_functions_PKN_OCEAN.R"))
OCEAN.pkn.hs <- create_PKN_OCEAN(
GSMM.matlab.path = file.path(projectPath, "data/Human-PKN/Human-GEM.mat"),
GSMM.reactions.map = reactions.map.hs,
GSMM.metabolites.map = metabolites.map.hs,
KEGG.compounds = NULL,
translate.genes = TRUE,
organism = 9606
)
source("~/data/DM23/DM-29_Mouse-GSMMs_curation/Generation-PKN-OCEAN/src/generating_networks_OCEAN.R", echo=TRUE)
reactions.map.mm <- read.delim(file.path(projectPath, "data/Mouse-PKN/reactions.tsv"))
metabolites.map.mm <- read.delim(file.path(projectPath, "data/Mouse-PKN/metabolites.tsv"))
OCEAN.pkn.mm <- create_PKN_OCEAN(
GSMM.matlab.path = file.path(projectPath, "data/Mouse-PKN/Mouse-GEM.mat"),
GSMM.reactions.map = reactions.map.mm,
GSMM.metabolites.map = metabolites.map.mm,
KEGG.compounds = NULL,
translate.genes = FALSE,
organism = 10090
)
saveRDS(OCEAN.pkn.mm, file.path(projectPath, "output/OCEAN.PKN.mm.10090.rds"))
## Rat novergicus
reactions.map.rn <- read.delim(file.path(projectPath, "data/Rat-PKN/reactions.tsv"))
metabolites.map.rn <- read.delim(file.path(projectPath, "data/Rat-PKN/metabolites.tsv"))
OCEAN.pkn.rn <- create_PKN_OCEAN(
GSMM.matlab.path = file.path(projectPath, "data/Rat-PKN/Rat-GEM.mat"),
GSMM.reactions.map = reactions.map.rn,
GSMM.metabolites.map = metabolites.map.rn,
KEGG.compounds = NULL,
translate.genes = FALSE,
organism = 10116
)
saveRDS(OCEAN.pkn.rn, file.path(projectPath, "output/OCEAN.PKN.rn.10116.rds"))
